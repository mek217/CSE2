{"filter":false,"title":"PokerOdds.java","tooltip":"/hw10/PokerOdds.java","undoManager":{"mark":11,"position":11,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":110,"column":0},"end":{"row":110,"column":1}},"text":"}"},{"action":"removeLines","range":{"start":{"row":16,"column":0},"end":{"row":110,"column":0}},"nl":"\n","lines":["        Scanner scan = new Scanner(System.in);","        showHands();","//        simulateOdds();","        ","    }","    ","    public static void showHands(){","        Scanner scan=new Scanner(System.in);","        int deck[]=new int[52];                                                 //Make deck","        for(int i=0; i<52; i++){deck[i]=i;}","        ","        int hand[]=new int[5];                                                  //Make hand","        for(int j=0; j<5; j++){hand[j]=-1;}","        ","        int chosenPosition=0, tempHand=0;                                       //Initialize variables","        for(int k=0; k<5; k++){                                                 //Pick a random value for hand","            chosenPosition=(int)(Math.random()*(51-k));                         //Make chosenPosition equal a number between 0 and (51-k)","            tempHand=hand[k];                                                   //Save hand[] value","            hand[k]=deck[chosenPosition];                                       //Move deck[chosenPosition] to hand[k]","            for(int l=chosenPosition; l<(51-k); l++){deck[l]=deck[l+1];}        //Remove deck[chosenPosition]from deck[] and shift values by 1","            deck[51-k]=tempHand;                                                //Move the -1 hand[k] value to the end of the deck","        }","        ","        String clubs=\"Clubs:    \", diamonds=\"Diamonds: \", hearts=\"Hearts:   \", spades=\"Spades:   \";","        String[] cardinHand=new String[5];","        for(int m=0; m<5; m++){","            switch((hand[m]+1)%13){","                case 9:  cardinHand[m]=\"J \";","                    break;","                case 10: cardinHand[m]=\"Q \";","                    break;","                case 11: cardinHand[m]=\"K \";","                    break;","                case 12: cardinHand[m]=\"A \";","                    break;","                default: cardinHand[m]=Integer.toString(hand[m]+2)+\" \";","                    break;","            }","            switch(hand[m]/13){","                case 0: clubs+=cardinHand[m];","                    break;","                case 1: diamonds+=cardinHand[m];","                    break;","                case 2: hearts+=cardinHand[m];","                    break;","                case 3: spades+=cardinHand[m];","                    break;","            }","        }","        System.out.println(clubs);","        System.out.println(diamonds);","        System.out.println(hearts);","        System.out.println(spades);","        System.out.print(\"Go again? Enter 'y' or 'Y', anything else to quit- \");","        scan.next();","        if()","        ","/*","Clubs:    J 4 ","Diamonds: ","Hearts:   J 7 4 ","Spades:   ","","Go again? Enter 'y' or 'Y', anything else to quit- y","Clubs:    Q 2 ","Diamonds: A ","Hearts:   5 ","Spades:   J ","","Go again? Enter 'y' or 'Y', anything else to quit- q","  rank   freq of exactly one pair","    A       312","    K       307","    Q       339","    J       325","   10       323","    9       334","    8       363","    7       312","    6       339","    5       349","    4       328","    3       293","    2       327","----------------------------"," total not exactly one pair: 5749","*/","        ","        ","        ","        ","        ","    }","    "]},{"action":"removeText","range":{"start":{"row":15,"column":43},"end":{"row":16,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":15,"column":43},"end":{"row":16,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":16,"column":0},"end":{"row":119,"column":0}},"lines":["        showHands();","        simulateOdds();","        ","    }","    ","    public static int[] handMaker(int[] hand){","        int[] deck=new int[52];                                             //Make deck","        for(int i=0; i<52; i++){deck[i]=i;}","        ","        hand[]=new int[5];                                              //Make hand","        for(int j=0; j<5; j++){hand[j]=-1;}","        ","        int chosenPosition=0, tempHand=0;                                   //Initialize variables","        for(int k=0; k<5; k++){                                             //Pick a random value for hand","            chosenPosition=(int)(Math.random()*(51-k));                     //Make chosenPosition equal a number between 0 and (51-k)","            tempHand=hand[k];                                               //Save hand[] value","            hand[k]=deck[chosenPosition];                                   //Move deck[chosenPosition] to hand[k]","            for(int l=chosenPosition; l<(51-k); l++){deck[l]=deck[l+1];}    //Remove deck[chosenPosition]from deck[] and shift values by 1","            deck[51-k]=tempHand;                                            //Move the -1 hand[k] value to the end of the deck","        }","    }","    ","    public static void showHands(){","        Scanner scan = new Scanner(System.in);","        String answer=\"\";","        int[] hand;","        do{","            handMaker(hand)","            int deck[]=new int[52];                                             //Make deck","            for(int i=0; i<52; i++){deck[i]=i;}","            ","            int hand[]=new int[5];                                              //Make hand","            for(int j=0; j<5; j++){hand[j]=-1;}","            ","            int chosenPosition=0, tempHand=0;                                   //Initialize variables","            for(int k=0; k<5; k++){                                             //Pick a random value for hand","                chosenPosition=(int)(Math.random()*(51-k));                     //Make chosenPosition equal a number between 0 and (51-k)","                tempHand=hand[k];                                               //Save hand[] value","                hand[k]=deck[chosenPosition];                                   //Move deck[chosenPosition] to hand[k]","                for(int l=chosenPosition; l<(51-k); l++){deck[l]=deck[l+1];}    //Remove deck[chosenPosition]from deck[] and shift values by 1","                deck[51-k]=tempHand;                                            //Move the -1 hand[k] value to the end of the deck","            }","            ","            String clubs=\"Clubs:    \", diamonds=\"Diamonds: \", hearts=\"Hearts:   \", spades=\"Spades:   \";","            String[] cardinHand=new String[5];","            for(int m=0; m<5; m++){","                switch((hand[m]+1)%13){","                    case 9:  cardinHand[m]=\"J \";","                        break;","                    case 10: cardinHand[m]=\"Q \";","                        break;","                    case 11: cardinHand[m]=\"K \";","                        break;","                    case 12: cardinHand[m]=\"A \";","                        break;","                    default: cardinHand[m]=Integer.toString(hand[m]+2)+\" \";","                        break;","                }","                switch(hand[m]/13){","                    case 0: clubs+=cardinHand[m];","                        break;","                    case 1: diamonds+=cardinHand[m];","                        break;","                    case 2: hearts+=cardinHand[m];","                        break;","                    case 3: spades+=cardinHand[m];","                        break;","                }","            }","            System.out.println(clubs);","            System.out.println(diamonds);","            System.out.println(hearts);","            System.out.println(spades);","            System.out.print(\"Go again? Enter 'y' or 'Y', anything else to quit- \");","            answer=scan.next();","        }while(answer.equals(\"y\") || answer.equals(\"Y\"));","    }","    ","    public static void simulateOdds(){","        System.out.println(\"  rank   freq of exactly one pair\")","        for()","    }","    ","}","","","/*","  rank   freq of exactly one pair","    A       312","    K       307","    Q       339","    J       325","   10       323","    9       334","    8       363","    7       312","    6       339","    5       349","    4       328","    3       293","    2       327","----------------------------"," total not exactly one pair: 5749"]},{"action":"insertText","range":{"start":{"row":119,"column":0},"end":{"row":119,"column":2}},"text":"*/"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":37,"column":0},"end":{"row":37,"column":4}},"text":"    "},{"action":"removeLines","range":{"start":{"row":22,"column":0},"end":{"row":37,"column":0}},"nl":"\n","lines":["        int[] deck=new int[52];                                             //Make deck","        for(int i=0; i<52; i++){deck[i]=i;}","        ","        hand[]=new int[5];                                              //Make hand","        for(int j=0; j<5; j++){hand[j]=-1;}","        ","        int chosenPosition=0, tempHand=0;                                   //Initialize variables","        for(int k=0; k<5; k++){                                             //Pick a random value for hand","            chosenPosition=(int)(Math.random()*(51-k));                     //Make chosenPosition equal a number between 0 and (51-k)","            tempHand=hand[k];                                               //Save hand[] value","            hand[k]=deck[chosenPosition];                                   //Move deck[chosenPosition] to hand[k]","            for(int l=chosenPosition; l<(51-k); l++){deck[l]=deck[l+1];}    //Remove deck[chosenPosition]from deck[] and shift values by 1","            deck[51-k]=tempHand;                                            //Move the -1 hand[k] value to the end of the deck","        }","    }"]},{"action":"removeText","range":{"start":{"row":21,"column":4},"end":{"row":21,"column":46}},"text":"public static int[] handMaker(int[] hand){"},{"action":"removeText","range":{"start":{"row":21,"column":4},"end":{"row":22,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":21,"column":0},"end":{"row":21,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":20,"column":4},"end":{"row":21,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":20,"column":0},"end":{"row":20,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":19,"column":5},"end":{"row":20,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":5},"end":{"row":20,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":20,"column":0},"end":{"row":20,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":24,"column":0},"end":{"row":24,"column":19}},"text":"        int[] hand;"},{"action":"removeText","range":{"start":{"row":23,"column":25},"end":{"row":24,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":25,"column":0},"end":{"row":25,"column":27}},"text":"            handMaker(hand)"},{"action":"removeText","range":{"start":{"row":24,"column":11},"end":{"row":25,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":78,"column":0},"end":{"row":78,"column":5}},"text":"    }"},{"action":"removeLines","range":{"start":{"row":74,"column":0},"end":{"row":78,"column":0}},"nl":"\n","lines":["    ","    public static void simulateOdds(){","        System.out.println(\"  rank   freq of exactly one pair\")","        for()"]},{"action":"removeText","range":{"start":{"row":73,"column":5},"end":{"row":74,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":0},"end":{"row":17,"column":1}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":1},"end":{"row":17,"column":2}},"text":"/"}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":17,"column":2},"end":{"row":17,"column":2},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":20,"state":"start","mode":"ace/mode/java"}},"timestamp":1416544676401,"hash":"8c7d4dc8be5a7f5538e24bc9012f6591c5772494"}